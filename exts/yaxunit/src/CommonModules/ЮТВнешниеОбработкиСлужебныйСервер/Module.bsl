//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2024 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Функция СкомпилирватьВнешнуюОбработку(ТекстМодуляОбъект = "", Знач ТекстМодуляФормы = "") Экспорт
	
	// Для сборки используется утилита v8unpack - https://github.com/e8tools/v8unpack
	
	ИдентификаторМодуляОбъекта = "00ab4620-8498-4b18-a4f8-18b53138fcb5.0";
	ИдентификаторФормы = "a10cd1fd-c4ba-437c-9925-b7354192a1ea.0";
	
	РабочийКаталог = ЮТФайлы.ОбъединитьПути(КаталогВременныхФайлов(), "yaxunit-v8unpack");
	ПодготовитьРабочийКаталог(РабочийКаталог);
	
	КаталогСборки = ЮТФайлы.ОбъединитьПути(РабочийКаталог, "build");
	КаталогФайловОбработки = ЮТФайлы.ОбъединитьПути(КаталогСборки, "unpack");
	
	УдалитьФайлы(КаталогСборки);
	СоздатьКаталог(КаталогСборки);
	
	РаспаковатьОбработку(РабочийКаталог);
	
	ЮТФайлы.СкопироватьКаталог(ЮТФайлы.ОбъединитьПути(РабочийКаталог, "unpack"), КаталогФайловОбработки);
	
	// Модуль объекта
	ИмяФайлаМодуляОбъекта = ЮТФайлы.ОбъединитьПути(КаталогФайловОбработки, ИдентификаторМодуляОбъекта, "text");
	ЮТФайлы.ЗаписатьТекстВФайла(ИмяФайлаМодуляОбъекта, ТекстМодуляОбъект);
	
	// Модуль формы
	ИмяФайлаФормы = ЮТФайлы.ОбъединитьПути(КаталогФайловОбработки, ИдентификаторФормы);
	ДанныеФормы = ЮТФайлы.ДанныеТекстовогоФайла(ИмяФайлаФормы);
	ТекстМодуляФормы = СтрЗаменить(ТекстМодуляФормы, """", """""");
	ДанныеФормы = СтрЗаменить(ДанныеФормы, "MODULE_PLACEHOLDER", ТекстМодуляФормы);
	ЮТФайлы.ЗаписатьТекстВФайла(ИмяФайлаФормы, ДанныеФормы);
	
	СобратьОбработку(РабочийКаталог);
	
	Возврат ЮТФайлы.ОбъединитьПути(КаталогСборки, "out.epf");
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьРабочийКаталог(РабочийКаталог)
	
	Если ЮТФайлы.Существует(РабочийКаталог) Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьКаталог(РабочийКаталог);
	Данные = ПолучитьОбщийМакет("ЮТV8UnpackWS");
	Архив = Новый ЧтениеZipФайла(Данные.ОткрытьПотокДляЧтения());
	Архив.ИзвлечьВсе(РабочийКаталог);
	Архив.Закрыть();
	
КонецПроцедуры

Процедура РаспаковатьОбработку(РабочийКаталог)
	
	Если ЮТФайлы.Существует(ЮТФайлы.ОбъединитьПути(РабочийКаталог, "unpack")) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЮТОкружение.ЭтоWindows() Тогда
		Команда = "v8unpack.exe -P template_managment.epf unpack";
	Иначе
		Команда = "/bin/bash unpack-epf.sh > build/unpack.log";
	КонецЕсли;
	
	КодВозврата = Неопределено;
	ЗапуститьПриложение(Команда, РабочийКаталог, Истина, КодВозврата);
	
	Если КодВозврата <> 0 Тогда
		ВызватьИсключение СтрШаблон("Не удалось распаковать шаблон обработки. Команда: `%1`", Команда);
	КонецЕсли;
	
КонецПроцедуры

Процедура СобратьОбработку(РабочийКаталог)
	
	Если ЮТОкружение.ЭтоWindows() Тогда
		Команда = "v8unpack.exe -B build\unpack build\out.epf";
	Иначе
		Команда = "/bin/bash build-epf.sh > build/build.log";
	КонецЕсли;
	
	КодВозврата = Неопределено;
	ЗапуститьПриложение(Команда, РабочийКаталог, Истина, КодВозврата);
	
	Если КодВозврата <> 0 Тогда
		ВызватьИсключение СтрШаблон("Не удалось собрать обработку. Команда: `%1`", Команда);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
