//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2024 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Функция Формы(Знач КлючНастроек, Знач ОтборФорм) Экспорт
	
	ВладельцыФорм = Новый Массив;
	КоллекцииМетаданных = СтрРазделить("Справочники, Документы", ", ", Ложь);
	
	Для Каждого ИмяКоллекции Из КоллекцииМетаданных Цикл
		
		Коллекция = Метаданные[ИмяКоллекции];
		Тип = ЮТМетаданные.ТипыМетаданных()[ИмяКоллекции];
		
		Для Каждого ОбъектМетаданных Из Коллекция Цикл
			
			ВладелецФорм = ВладелецФормы(Тип.Имя, ОбъектМетаданных.Имя);
			
			Для Каждого Форма Из ОбъектМетаданных.Формы Цикл
				
				ОписаниеФормы = НовоеОписаниеФормы(ОбъектМетаданных, Форма);
				ВладелецФорм.Формы.Добавить(ОписаниеФормы);
				
			КонецЦикла;
			
			Если ЗначениеЗаполнено(ВладелецФорм.Формы) Тогда
				ВладельцыФорм.Добавить(ВладелецФорм);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ВладельцыФорм;
	
КонецФункции

Функция СлучайныйЭлемент(Знач ТипОбъекта, Знач ИмяОбъекта, Знач Параметры = Неопределено) Экспорт
	
	ПолноеИмя = СтрШаблон("%1.%2", ТипОбъекта, ИмяОбъекта);
	ОписаниеОбъектаМетаданных = ЮТМетаданные.ОписаниеОбъектаМетаданных(ПолноеИмя);
	РеквизитУпорядочивания = РеквизитУпорядочивания(ОписаниеОбъектаМетаданных);
	
	Запрос = Новый Запрос;
	
	ВыбираемыеПоля = Новый Массив;
	Для Каждого Реквизит Из ОписаниеОбъектаМетаданных.Реквизиты Цикл
		
		Если Реквизит.Значение.ЭтоКлюч Тогда
			ВыбираемыеПоля.Добавить(Реквизит.Ключ);
		КонецЕсли;
		
	КонецЦикла;
	
	Реквизиты = СтрСоединить(ВыбираемыеПоля, ", ");
	
	НомерЭлемента = ЮТТестовыеДанные.СлучайноеПоложительноеЧисло(100);
	Запрос.Текст = СтрШаблон(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	*
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ %1
	|		%2
	|	ИЗ
	|		%3 КАК Выборка
	|
	|	УПОРЯДОЧИТЬ ПО
	|		%4 УБЫВ) КАК ВЫБОРКА
	|
	|УПОРЯДОЧИТЬ ПО
	|	%4", НомерЭлемента, Реквизиты, ПолноеИмя, РеквизитУпорядочивания);
	
	ЗначенияРеквизитов = ЮТЗапросыСлужебныйВызовСервера.ЗначенияИзЗапроса(Запрос, Реквизиты);
	
	Если ОписаниеОбъектаМетаданных.ОписаниеТипа.Ссылочный Тогда
		Возврат ЗначенияРеквизитов.Ссылка;
	Иначе
		Возврат ЗначенияРеквизитов;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовоеОписаниеФормы(ОбъектМетаданных, Форма)
	
	Описание = ОписаниеФормы();
	Описание.Имя = Форма.Имя;
	
	Описание.ЭтоОбычнаяФорма = Форма.ТипФормы = Метаданные.СвойстваОбъектов.ТипФормы.Обычная;
	Описание.ЭтоОбычнаяФорма = Форма.ТипФормы = Метаданные.СвойстваОбъектов.ТипФормы.Управляемая;
	
	ФормаОбъекта = "ФормаОбъекта";
	ФормаГруппы = "ФормаГруппы";
	ФормаДляВыбора = "ФормаДляВыбора";
	ФормаДляВыбораГруппы = "ФормаДляВыбораГруппы";
	ФормаСписка = "ФормаСписка";
	
	Если ФормаИмеетТип(ФормаОбъекта, ОбъектМетаданных, Форма) Тогда
		Описание.ЭтоФормаОбъекта = Истина;
	КонецЕсли;
	
	Если ФормаИмеетТип(ФормаГруппы, ОбъектМетаданных, Форма) Тогда
		Описание.ЭтоФормаОбъекта = Истина;
		Описание.ЭтоФормаГруппы = Истина;
	КонецЕсли;
	
	Если ФормаИмеетТип(ФормаДляВыбора, ОбъектМетаданных, Форма) Тогда
		Описание.ЭтоФормаВыбора = Истина;
	КонецЕсли;
	
	Если ФормаИмеетТип(ФормаДляВыбораГруппы, ОбъектМетаданных, Форма) Тогда
		Описание.ЭтоФормаВыбора = Истина;
		Описание.ЭтоФормаГруппы = Истина;
	КонецЕсли;
	
	Если ФормаИмеетТип(ФормаСписка, ОбъектМетаданных, Форма) Тогда
		Описание.ЭтоФормаСписка = Истина;
	КонецЕсли;
	
	Возврат Описание;
	
КонецФункции

Функция ФормаИмеетТип(ИмяФормы, ОбъектМетаданных, Форма)
	
	Возврат ЮТОбщий.ПеременнаяСодержитСвойство(ОбъектМетаданных, "Основная" + ИмяФормы)
		И (Форма = ОбъектМетаданных["Основная" + ИмяФормы] Или Форма = ОбъектМетаданных["Дополнительная" + ИмяФормы]);
	
КонецФункции

Функция ОписаниеФормы()
	
	Описание = Новый Структура;
	Описание.Вставить("Имя", "");
	Описание.Вставить("ЭтоФормаСписка", Ложь);
	Описание.Вставить("ЭтоФормаОбъекта", Ложь);
	Описание.Вставить("ЭтоФормаГруппы", Ложь);
	Описание.Вставить("ЭтоФормаВыбора", Ложь);
	Описание.Вставить("ЭтоОбычнаяФорма", Ложь);
	Описание.Вставить("ЭтоУправляемаяФорма", Ложь);
	
	Возврат Описание;
	
КонецФункции

Функция ВладелецФормы(Тип, Имя)
	
	Описание = Новый Структура;
	Описание.Вставить("Тип", Тип);
	Описание.Вставить("Имя", Имя);
	Описание.Вставить("Формы", Новый Массив);
	Возврат Описание;
	
КонецФункции

Функция РеквизитУпорядочивания(ОписаниеОбъектаМетаданных)
	
	Если ЮТМетаданные.ЭтоДокумент(ОписаниеОбъектаМетаданных) Тогда
		Возврат "Дата";
	ИначеЕсли ОписаниеОбъектаМетаданных.ОписаниеТипа.Ссылочный Тогда
		Возврат "Ссылка";
	КонецЕсли;
	
КонецФункции

#КонецОбласти
