//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2024 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

// Инициализация.
//
// Параметры:
//  ПараметрыЗапуска - см. ЮТФабрика.ПараметрыЗапуска
Процедура Инициализация(ПараметрыЗапуска) Экспорт
	
	Настройки = ЗагрузитьНастройки(ПараметрыЗапуска);
	
	ЮТКонтекстСлужебный.УстановитьЗначениеКонтекста(ИмяКонтекстаНастройки(), Настройки, Истина);
	
КонецПроцедуры

Функция Настройки() Экспорт
	
	Возврат ЮТКонтекстСлужебный.ЗначениеКонтекста(ИмяКонтекстаНастройки());
	
КонецФункции

Функция ИсключитьТест(КлючТеста) Экспорт
	
	Настройки = Настройки();
	
	Если Настройки = Неопределено Или Не Настройки.Использовать Тогда
		Возврат Истина;
	КонецЕсли;
	
	ЭлементНастройки = Настройки;
	НаборыИсключений = Новый Массив;
	Исключить = Ложь;
	
	Для Каждого Ключ Из ЮТСтроки.РазделитьСтроку(КлючТеста, ".") Цикл
		
		Если ЭлементНастройки <> Неопределено И ЗначениеЗаполнено(ЭлементНастройки.Исключения) Тогда
			НаборыИсключений.Добавить(ЭлементНастройки.Исключения);
		КонецЕсли;
		
		ЭлементНастройки = ЮТКоллекции.ЗначениеСтруктуры(Настройки.Подчиненные, Ключ);
		
		Если ЭлементНастройки = Неопределено И НЕ ЗначениеЗаполнено(НаборыИсключений) Тогда
			Прервать;
		ИначеЕсли ЭлементНастройки <> Неопределено Тогда
			Если НЕ ЭлементНастройки.Использовать Тогда
				Исключить = Истина;
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
		Если ПодходитПодИсключения(Ключ, НаборыИсключений) Тогда
			Исключить = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Исключить;
	
КонецФункции



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Контекст

Функция ИмяКонтекстаНастройки()
	
	Возврат "НастройкиДымовыхТестов";
	
КонецФункции

#КонецОбласти

#Область ЗагрузкаНастроек

Функция ЗагрузитьНастройки(ПараметрыЗапуска) Экспорт
	
	Настройки = НастройкиДымовыхТестов();
	ЗагружаемыеПараметры = ЮТКоллекции.ЗначениеСтруктуры(ПараметрыЗапуска, "ДымовыеТесты");
	
	Если Не ЗначениеЗаполнено(ЗагружаемыеПараметры) Тогда
		Возврат Настройки;
	КонецЕсли;
	
	ЮТПроверкиСлужебный.ПроверитьТипПараметра(ЗагружаемыеПараметры, "Булево, Структура", "ЗагрузитьНастройкиДымовыхТестов", "ДымовыеТесты");
	
	ПрочитатьНастройки(Настройки, ЗагружаемыеПараметры, "ДымовыеТесты");
	
	Возврат Настройки;
	
КонецФункции

Процедура ПрочитатьНастройки(Настройки, ЗагружаемыеНастройки, Путь)
	
	Если ТипЗнч(ЗагружаемыеНастройки) = Тип("Булево") Тогда
		Настройки.Использовать = ЗагружаемыеНастройки;
		Возврат;
	КонецЕсли;
	
	Для Каждого Элемент Из ЗагружаемыеНастройки Цикл
		
		Если СтрСравнить(Элемент.Ключ, "Использовать") = 0 Тогда
			Настройки.Использовать = Элемент.Значение;
		ИначеЕсли СтрСравнить(Элемент.Ключ, "Исключения") = 0 Тогда
			ПрочитатьИсключения(Настройки, Элемент.Значение, Путь);
		ИначеЕсли СтрСравнить(Элемент.Ключ, "Параметры") = 0 Тогда
			ПрочитатьПараметры(Настройки, Элемент.Значение, Путь);
		Иначе
			ПрочитатьВложеннуюНастройку(Настройки, Элемент.Ключ, Элемент.Значение, Путь);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПрочитатьИсключения(Настройки, Исключения, Путь)
	
	Если ТипЗнч(Исключения) = Тип("Строка") Тогда
		Настройки.Исключения.Добавить(Исключения);
	ИначеЕсли ТипЗнч(Исключения) = Тип("Массив") Тогда
		Настройки.Исключения = Исключения;
	ИначеЕсли Исключения <> Неопределено Тогда
		ВызватьИсключение СтрШаблон("Некорретный тип элемента настроек `%1.Исключения`. Допустимо: Строка или Массив из Строка", Путь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрочитатьПараметры(Настройки, Параметры, Путь)
КонецПроцедуры

Функция ПрочитатьВложеннуюНастройку(Настройки, ИмяНастройки, ЗначениеНастройки, Путь)
	
	ВложеннаяНастройка = ОписаниеЭлементаНастройки();
	ПрочитатьНастройки(ВложеннаяНастройка, ЗначениеНастройки, Путь + "." + ИмяНастройки);
	
	Настройки.Подчиненные.Вставить(ИмяНастройки, ВложеннаяНастройка);
	Возврат ВложеннаяНастройка;
	
КонецФункции

Функция НастройкиДымовыхТестов()
	
	Настройки = ОписаниеЭлементаНастройки();
	Настройки.Использовать = Ложь;
	
	Возврат Настройки;
	
КонецФункции

Функция ОписаниеЭлементаНастройки()
	
	Описание = Новый Структура;
	Описание.Вставить("Исключения", Новый Массив);
	Описание.Вставить("Подчиненные", Новый Структура);
	Описание.Вставить("Параметры", Неопределено);
	Описание.Вставить("Использовать", Истина);
	
	Возврат Описание;
	
КонецФункции

#КонецОбласти

Функция ПодходитПодИсключения(Ключ, НаборыИсключений)
	
	Для Каждого Набор Из НаборыИсключений Цикл
		
		Для Каждого ОписаниеИсключения Из Набор Цикл
			
			Если ЮТСтроки.СоответсвуетШаблону(Ключ, ОписаниеИсключения) Тогда
				Возврат Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти
