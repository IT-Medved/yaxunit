//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2024 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область ПрограммныйИнтерфейс

// Инициализирует новый конструктор вариантов
// 
// Параметры:
//  Реквизиты - Строка - Имена реквизитов варианта разделенные запятыми.
// 
// Возвращаемое значение:
//  ОбщийМодуль - Этот же модуль, для замыкания
Функция Варианты(Реквизиты) Экспорт
	
	Попытка
		//@skip-check module-unused-local-variable
		Проверка = Новый Структура(Реквизиты);
	Исключение
		ВызватьИсключение "Некорректные имена реквизитов вариантов: " + Реквизиты;
	КонецПопытки;
	
	Варианты = Новый Структура("СтрокаРеквизиты, Варианты, КоличествоРеквизитов", Реквизиты, Новый Массив());
	Варианты.Вставить("Реквизиты", СтрРазделить(Реквизиты, ", ", Ложь));
	
	Варианты.КоличествоРеквизитов = Варианты.Реквизиты.Количество();
	
	ЮТКонтекстСлужебный.УстановитьЗначениеКонтекста(КлючКонтекста(), Варианты);
	
	Возврат ЮТКонструкторВариантов;
	
КонецФункции

// Добавляет новый вариант
// 
// Параметры:
//  Параметр1 - Произвольный
//  Параметр2 - Произвольный
//  Параметр3 - Произвольный
//  Параметр4 - Произвольный
//  Параметр5 - Произвольный
//  Параметр6 - Произвольный
//  Параметр7 - Произвольный
// 
// Возвращаемое значение:
//  ОбщийМодуль - Этот же модуль, для замыкания
//@skip-check method-too-many-params
Функция Добавить(Параметр1,
				 Параметр2 = Неопределено,
				 Параметр3 = Неопределено,
				 Параметр4 = Неопределено,
				 Параметр5 = Неопределено,
				 Параметр6 = Неопределено,
				 Параметр7 = Неопределено) Экспорт
// BSLLS:MagicNumber-off	
// BSLLS:NumberOfValuesInStructureConstructor-off
	Варианты = ЮТКонтекстСлужебный.ЗначениеКонтекста(КлючКонтекста());
	
	Если Варианты.КоличествоРеквизитов = 1 Тогда
		Вариант = Новый Структура(Варианты.СтрокаРеквизиты, Параметр1);
	ИначеЕсли Варианты.КоличествоРеквизитов = 2 Тогда
		Вариант = Новый Структура(Варианты.СтрокаРеквизиты, Параметр1, Параметр2);
	ИначеЕсли Варианты.КоличествоРеквизитов = 3 Тогда
		Вариант = Новый Структура(Варианты.СтрокаРеквизиты, Параметр1, Параметр2, Параметр3);
	ИначеЕсли Варианты.КоличествоРеквизитов = 4 Тогда
		Вариант = Новый Структура(Варианты.СтрокаРеквизиты, Параметр1, Параметр2, Параметр3, Параметр4);
	ИначеЕсли Варианты.КоличествоРеквизитов = 5 Тогда
		Вариант = Новый Структура(Варианты.СтрокаРеквизиты, Параметр1, Параметр2, Параметр3, Параметр4, Параметр5);
	ИначеЕсли Варианты.КоличествоРеквизитов = 6 Тогда
		Вариант = Новый Структура(Варианты.СтрокаРеквизиты, Параметр1, Параметр2, Параметр3, Параметр4, Параметр5, Параметр6);
	ИначеЕсли Варианты.КоличествоРеквизитов = 7 Тогда
		Вариант = Новый Структура(Варианты.СтрокаРеквизиты, Параметр1, Параметр2, Параметр3, Параметр4, Параметр5, Параметр6, Параметр7);
	КонецЕсли;
// BSLLS:NumberOfValuesInStructureConstructor-on
// BSLLS:MagicNumber-on	
	Варианты.Варианты.Добавить(Вариант);
	
	Возврат ЮТКонструкторВариантов;
	
КонецФункции

// Добавляет новый вариант
// 
// Параметры:
//  Параметр1 - Массив из Произвольный
//  Параметр2 - Массив из Произвольный
//  Параметр3 - Массив из Произвольный
//  Параметр4 - Массив из Произвольный
//  Параметр5 - Массив из Произвольный
//  Параметр6 - Массив из Произвольный
//  Параметр7 - Массив из Произвольный
// 
// Возвращаемое значение:
//  ОбщийМодуль - Этот же модуль, для замыкания
//@skip-check method-too-many-params
Функция ДобавитьКомбинации(Параметр1,
				 Параметр2 = Неопределено,
				 Параметр3 = Неопределено,
				 Параметр4 = Неопределено,
				 Параметр5 = Неопределено,
				 Параметр6 = Неопределено,
				 Параметр7 = Неопределено) Экспорт
	
	ВсеПараметры = Новый Массив(7);
	ВсеПараметры[0] = Параметр1;
	ВсеПараметры[1] = Параметр2;
	ВсеПараметры[2] = Параметр3;
	ВсеПараметры[3] = Параметр4;
	ВсеПараметры[4] = Параметр5;
	ВсеПараметры[5] = Параметр6;
	ВсеПараметры[6] = Параметр7;
	
	ПараметрыВариантов = ЮТКонтекстСлужебный.ЗначениеКонтекста(КлючКонтекста());
	ЗначенияПараметров = Новый Массив(ПараметрыВариантов.КоличествоРеквизитов);
	
	Для Инд = 0 По ПараметрыВариантов.КоличествоРеквизитов - 1 Цикл
		ЗначенияПараметров[Инд] = ВсеПараметры[Инд];
	КонецЦикла;
	
	ДобавитьВарианты(ПараметрыВариантов.Варианты, ЗначенияПараметров, ПараметрыВариантов.Реквизиты, 0, Новый Структура(ПараметрыВариантов.СтрокаРеквизиты));
	
	Возврат ЮТКонструкторВариантов;
	
КонецФункции

// Список вариантов.
// 
// Возвращаемое значение:
//  Массив из Структура
Функция СписокВариантов() Экспорт
	
	Возврат ЮТКонтекстСлужебный.ЗначениеКонтекста(КлючКонтекста()).Варианты;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КлючКонтекста()
	
	Возврат "ВариантыТеста";
	
КонецФункции

Процедура ДобавитьВарианты(Варианты, ЗначенияПараметров, Ключи, Инд, БазоваяСтруктура)
	
	ПоследняяИтерация = Инд = Ключи.ВГраница();
	Ключ = Ключи[Инд];
	
	Для Каждого Значение Из ЗначенияПараметров[Инд] Цикл
		
		БазоваяСтруктура[Ключ] = Значение;
		
		Если ПоследняяИтерация Тогда
			Вариант = ЮТКоллекции.СкопироватьСтруктуру(БазоваяСтруктура);
			Варианты.Добавить(Вариант);
		Иначе
			ДобавитьВарианты(Варианты, ЗначенияПараметров, Ключи, Инд + 1, БазоваяСтруктура);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
