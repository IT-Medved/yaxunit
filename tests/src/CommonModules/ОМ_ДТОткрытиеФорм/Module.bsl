#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты
		.ДобавитьТест("Инициализация")
	;
	
КонецПроцедуры

Процедура Инициализация() Экспорт
	
	ОткрытиеФорм = Новый Структура("Использовать", Истина);
	
	ПараметрыЗапуска = Новый Структура("ДымовыеТесты", Новый Структура("ОткрытиеФорм", ОткрытиеФорм));
	ПараметрыЗапуска.ДымовыеТесты.Вставить("Использовать", Истина);
	
	ОткрытиеФорм.Вставить("Справочник", Истина);
	ОткрытиеФорм.Вставить("Исключения", "Номенклатура");
	ЮТест.ОжидаетЧто(ЗагруженнаяНастройка(ПараметрыЗапуска))
		.Свойство("Использовать").ЭтоИстина()
		.Свойство("Справочник.Использовать").ЭтоИстина()
		.Свойство("Исключения[0]").Равно("Номенклатура");
	
	ОткрытиеФорм.Вставить("Исключения", ЮТКоллекции.ЗначениеВМассиве("Номенклатура", "Скидки"));
	НастройкиСправочников = Новый Структура;
	ОткрытиеФорм.Удалить("Справочник");
	ОткрытиеФорм.Вставить("Справочники", НастройкиСправочников);
	НастройкиСправочников.Вставить("Исключения", "Удалить*");
	НастройкиСправочников.Вставить("Новый", Ложь);
	ЮТест.ОжидаетЧто(ЗагруженнаяНастройка(ПараметрыЗапуска))
		.Свойство("Исключения[0]").Равно("Номенклатура")
		.Свойство("Исключения[1]").Равно("Скидки")
		.Свойство("Справочник.Исключения[0]").Равно("Удалить*")
		.Свойство("Справочник.Использовать").ЭтоИстина()
		.Свойство("Справочник.Новый.Использовать").ЭтоЛожь()
	;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗагруженнаяНастройка(ПараметрыЗапуска)
	
	ДТОткрытиеФорм.Инициализация(ПараметрыЗапуска);
	Возврат ЮТКонтекстСлужебный.ЗначениеКонтекста("ДымовыеТесты_ОткрытиеФорм")
	
КонецФункции

#КонецОбласти
